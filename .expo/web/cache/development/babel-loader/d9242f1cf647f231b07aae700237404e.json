{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Match } from 'autolinker/dist/es2015';\nexport var LatLngMatch = function (_Match) {\n  _inherits(LatLngMatch, _Match);\n\n  var _super = _createSuper(LatLngMatch);\n\n  function LatLngMatch(cfg) {\n    var _this;\n\n    _classCallCheck(this, LatLngMatch);\n\n    _this = _super.call(this, cfg);\n    _this.latlng = cfg.latlng;\n    return _this;\n  }\n\n  _createClass(LatLngMatch, [{\n    key: \"getType\",\n    value: function getType() {\n      return 'latlng';\n    }\n  }, {\n    key: \"getLatLng\",\n    value: function getLatLng() {\n      return this.latlng;\n    }\n  }, {\n    key: \"getAnchorHref\",\n    value: function getAnchorHref() {\n      return this.latlng;\n    }\n  }, {\n    key: \"getAnchorText\",\n    value: function getAnchorText() {\n      return this.latlng;\n    }\n  }]);\n\n  return LatLngMatch;\n}(Match);\nexport var CustomMatchers = {\n  latlng: {\n    id: 'latlng',\n    regex: /[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)/g,\n    Match: LatLngMatch\n  }\n};\nexport var Matchers = Object.keys(CustomMatchers).map(function (key) {\n  return CustomMatchers[key];\n});","map":{"version":3,"sources":["C:/Users/Matheus/Desktop/react_native/jds/ForÃ§a de Vendas 2.0 (React Native)/node_modules/react-native-autolink/dist/matchers.js"],"names":["Match","LatLngMatch","cfg","latlng","CustomMatchers","id","regex","Matchers","Object","keys","map","key"],"mappings":";;;;;;;;;;AAOA,SAASA,KAAT,QAAsB,wBAAtB;AACA,WAAaC,WAAb;AAAA;;AAAA;;AACI,uBAAYC,GAAZ,EAAiB;AAAA;;AAAA;;AACb,8BAAMA,GAAN;AACA,UAAKC,MAAL,GAAcD,GAAG,CAACC,MAAlB;AAFa;AAGhB;;AAJL;AAAA;AAAA,8BAKc;AACN,aAAO,QAAP;AACH;AAPL;AAAA;AAAA,gCAQgB;AACR,aAAO,KAAKA,MAAZ;AACH;AAVL;AAAA;AAAA,oCAWoB;AACZ,aAAO,KAAKA,MAAZ;AACH;AAbL;AAAA;AAAA,oCAcoB;AACZ,aAAO,KAAKA,MAAZ;AACH;AAhBL;;AAAA;AAAA,EAAiCH,KAAjC;AAkBA,OAAO,IAAMI,cAAc,GAAG;AAE1BD,EAAAA,MAAM,EAAE;AACJE,IAAAA,EAAE,EAAE,QADA;AAEJC,IAAAA,KAAK,EAAE,yFAFH;AAGJN,IAAAA,KAAK,EAAEC;AAHH;AAFkB,CAAvB;AAQP,OAAO,IAAMM,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYL,cAAZ,EAA4BM,GAA5B,CAAgC,UAACC,GAAD;AAAA,SAASP,cAAc,CAACO,GAAD,CAAvB;AAAA,CAAhC,CAAjB","sourcesContent":["/*!\n * React Native Autolink\n *\n * Copyright 2016-2020 Josh Swan\n * Released under the MIT license\n * https://github.com/joshswan/react-native-autolink/blob/master/LICENSE\n */\nimport { Match } from 'autolinker/dist/es2015';\nexport class LatLngMatch extends Match {\n    constructor(cfg) {\n        super(cfg);\n        this.latlng = cfg.latlng;\n    }\n    getType() {\n        return 'latlng';\n    }\n    getLatLng() {\n        return this.latlng;\n    }\n    getAnchorHref() {\n        return this.latlng;\n    }\n    getAnchorText() {\n        return this.latlng;\n    }\n}\nexport const CustomMatchers = {\n    // LatLng\n    latlng: {\n        id: 'latlng',\n        regex: /[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)/g,\n        Match: LatLngMatch,\n    },\n};\nexport const Matchers = Object.keys(CustomMatchers).map((key) => CustomMatchers[key]);\n"]},"metadata":{},"sourceType":"module"}