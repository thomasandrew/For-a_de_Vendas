{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matheus\\\\Desktop\\\\react_native\\\\jds\\\\For\\xE7a de Vendas 2.0 (React Native)\\\\src\\\\providers\\\\DarkModeProvider.js\";\nimport React, { createContext, useEffect, useState, useContext } from 'react';\nimport AsyncStorage from '@react-native-community/async-storage';\nvar DarkModeContext = createContext({});\nexport var DarkModeProvider = function DarkModeProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      darkMode = _useState2[0],\n      setDarkMode = _useState2[1];\n\n  return React.createElement(DarkModeContext.Provider, {\n    value: {\n      darkMode: darkMode,\n      setDarkMode: setDarkMode\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport var useDarkMode = function useDarkMode() {\n  var _useContext = useContext(DarkModeContext),\n      darkMode = _useContext.darkMode;\n\n  var _setDarkMode = useContext(DarkModeContext).setDarkMode;\n  useEffect(function () {\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('darkMode', function (err, res) {\n                return _setDarkMode(res == \"true\");\n              }));\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var setDarkMode = function setDarkMode(value) {\n    return _regeneratorRuntime.async(function setDarkMode$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _setDarkMode(value);\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('darkMode', String(value)));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return {\n    darkMode: darkMode,\n    setDarkMode: setDarkMode\n  };\n};","map":{"version":3,"sources":["C:/Users/Matheus/Desktop/react_native/jds/Força de Vendas 2.0 (React Native)/src/providers/DarkModeProvider.js"],"names":["React","createContext","useEffect","useState","useContext","AsyncStorage","DarkModeContext","DarkModeProvider","children","darkMode","setDarkMode","useDarkMode","_setDarkMode","getItem","err","res","value","setItem","String"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,EAAoDC,UAApD,QAAsE,OAAtE;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,IAAMC,eAAe,GAAGL,aAAa,CAAC,EAAD,CAArC;AAEA,OAAO,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACdL,QAAQ,CAAC,KAAD,CADM;AAAA;AAAA,MACvCM,QADuC;AAAA,MAC7BC,WAD6B;;AAE9C,SACI,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,WAAW,EAAXA;AAAZ,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QADL,CADJ;AAKH,CAPM;AASP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,oBACRP,UAAU,CAACE,eAAD,CADF;AAAA,MACrBG,QADqB,eACrBA,QADqB;;AAE7B,MAAMG,YAAY,GAAGR,UAAU,CAACE,eAAD,CAAV,CAA4BI,WAAjD;AAGAR,EAAAA,SAAS,CAAC,YAAM;AACZ,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACSG,YAAY,CAACQ,OAAb,CAAqB,UAArB,EAAiC,UAACC,GAAD,EAAMC,GAAN;AAAA,uBACnCH,YAAY,CAAEG,GAAG,IAAI,MAAT,CADuB;AAAA,eAAjC,CADT;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAKH,GANQ,EAMN,EANM,CAAT;;AASA,MAAML,WAAW,GAAG,SAAdA,WAAc,CAAOM,KAAP;AAAA;AAAA;AAAA;AAAA;AAChBJ,YAAAA,YAAY,CAACI,KAAD,CAAZ;;AADgB;AAAA,6CAEVX,YAAY,CAACY,OAAb,CAAqB,UAArB,EAAiCC,MAAM,CAACF,KAAD,CAAvC,CAFU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAKA,SAAO;AAAEP,IAAAA,QAAQ,EAARA,QAAF;AAAYC,IAAAA,WAAW,EAAXA;AAAZ,GAAP;AACH,CApBM","sourcesContent":["import React, { createContext, useEffect, useState, useContext } from 'react'\r\nimport AsyncStorage from '@react-native-community/async-storage'\r\n\r\nconst DarkModeContext = createContext({})\r\n\r\nexport const DarkModeProvider = ({ children }) => {\r\n    const [darkMode, setDarkMode] = useState(false)\r\n    return (\r\n        <DarkModeContext.Provider value={{ darkMode, setDarkMode }}>\r\n            {children}\r\n        </DarkModeContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useDarkMode = () => {\r\n    const { darkMode } = useContext(DarkModeContext)\r\n    const _setDarkMode = useContext(DarkModeContext).setDarkMode\r\n\r\n    // Quando o componente é executado pela primeira vez, pegar dados do AsyncStorage\r\n    useEffect(() => {\r\n        (async () =>\r\n            await AsyncStorage.getItem('darkMode', (err, res) =>\r\n                _setDarkMode((res == \"true\"))\r\n            )\r\n        )()\r\n    }, [])\r\n\r\n    // Setar valores no Context e no AsyncStorage\r\n    const setDarkMode = async (value) => {\r\n        _setDarkMode(value)\r\n        await AsyncStorage.setItem('darkMode', String(value))\r\n    }\r\n\r\n    return { darkMode, setDarkMode }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}