{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-community/async-storage';\nexport var setData = function setData(key, value) {\n  return _regeneratorRuntime.async(function setData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(String(key), String(value), function (err) {\n            if (err) throw new Error(err);else console.log(\"\\\"\" + key + \": \" + value + \"\\\" saved successfully! \\uD83D\\uDCBE\");\n          }));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getData = function getData(key) {\n  return _regeneratorRuntime.async(function getData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key, function (err, resp) {\n            if (err) throw new Error(err);else if (typeof resp == 'object') console.log(\"\\\"\" + key + \"\\\" does not exist! \\uD83D\\uDE05\");else console.log(\"\\\"\" + key + \": \" + resp + \"\\\" successfully loaded! \\uD83C\\uDF89\");\n          }));\n\n        case 2:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var clearData = function clearData(key) {\n  return _regeneratorRuntime.async(function clearData$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(key, function (err) {\n            if (err) throw new Error(err);else console.log(\"\\\"\" + key + \"\\\" successfully removed! \\uD83D\\uDCA8\");\n          }));\n\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getAll = function getAll() {\n  return _regeneratorRuntime.async(function getAll$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getAllKeys(function (err, keys) {\n            if (err) throw new Error(err);else if (keys.length == 0) console.log(\"Nothing around here... 📭\");else console.log(\"All keys successfully loaded! 🤙\\n\", keys);\n          }));\n\n        case 2:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var clearAll = function clearAll() {\n  return _regeneratorRuntime.async(function clearAll$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.clear(function (err) {\n            if (err) throw new Error(err);else console.log(\"All clean and \\\"perfectly balanced, as all things should be.\\\" \\uD83D\\uDE08\\uD83D\\uDC8E\\uD83D\\uDC4C\\uD83D\\uDCA8\");\n          }));\n\n        case 2:\n          return _context5.abrupt(\"return\", _context5.sent);\n\n        case 3:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/Matheus/Desktop/react_native/jds/Força de Vendas 2.0 (React Native)/src/services/AsyncStorage.js"],"names":["AsyncStorage","setData","key","value","setItem","String","err","Error","console","log","getData","getItem","resp","clearData","removeItem","getAll","getAllKeys","keys","length","clearAll","clear"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACbH,YAAY,CAACI,OAAb,CAAqBC,MAAM,CAACH,GAAD,CAA3B,EAAkCG,MAAM,CAACF,KAAD,CAAxC,EAAiD,UAACG,GAAD,EAAS;AAC5D,gBAAIA,GAAJ,EAAS,MAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN,CAAT,KACKE,OAAO,CAACC,GAAR,QAAgBP,GAAhB,UAAwBC,KAAxB;AACR,WAHK,CADa;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAMP,OAAO,IAAMO,OAAO,GAAG,SAAVA,OAAU,CAAOR,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACbF,YAAY,CAACW,OAAb,CAAqBT,GAArB,EAA0B,UAACI,GAAD,EAAMM,IAAN,EAAe;AAC3C,gBAAIN,GAAJ,EAAS,MAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN,CAAT,KACK,IAAI,OAAOM,IAAP,IAAe,QAAnB,EAA6BJ,OAAO,CAACC,GAAR,QAAgBP,GAAhB,sCAA7B,KACAM,OAAO,CAACC,GAAR,QAAgBP,GAAhB,UAAwBU,IAAxB;AACR,WAJK,CADa;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAOP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOX,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACfF,YAAY,CAACc,UAAb,CAAwBZ,GAAxB,EAA6B,UAACI,GAAD,EAAS;AACxC,gBAAIA,GAAJ,EAAS,MAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN,CAAT,KACKE,OAAO,CAACC,GAAR,QAAgBP,GAAhB;AACR,WAHK,CADe;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;AAMP,OAAO,IAAMa,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACZf,YAAY,CAACgB,UAAb,CAAwB,UAACV,GAAD,EAAMW,IAAN,EAAe;AACzC,gBAAIX,GAAJ,EAAS,MAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN,CAAT,KACK,IAAGW,IAAI,CAACC,MAAL,IAAa,CAAhB,EAAmBV,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAnB,KACAD,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDQ,IAAlD;AACR,WAJK,CADY;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf;AAOP,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACdnB,YAAY,CAACoB,KAAb,CAAmB,UAACd,GAAD,EAAS;AAC9B,gBAAIA,GAAJ,EAAS,MAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN,CAAT,KACKE,OAAO,CAACC,GAAR;AACR,WAHK,CADc;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["import AsyncStorage from '@react-native-community/async-storage'\r\n\r\nexport const setData = async (key, value) =>\r\n    await AsyncStorage.setItem(String(key), String(value), (err) => {\r\n        if (err) throw new Error(err)\r\n        else console.log(`\"${key}: ${value}\" saved successfully! 💾`)\r\n    })\r\n\r\nexport const getData = async (key) =>\r\n    await AsyncStorage.getItem(key, (err, resp) => {\r\n        if (err) throw new Error(err)\r\n        else if (typeof resp == 'object') console.log(`\"${key}\" does not exist! 😅`)\r\n        else console.log(`\"${key}: ${resp}\" successfully loaded! 🎉`)\r\n    })\r\n\r\nexport const clearData = async (key) =>\r\n    await AsyncStorage.removeItem(key, (err) => {\r\n        if (err) throw new Error(err)\r\n        else console.log(`\"${key}\" successfully removed! 💨`)\r\n    })\r\n\r\nexport const getAll = async () =>\r\n    await AsyncStorage.getAllKeys((err, keys) => {\r\n        if (err) throw new Error(err)\r\n        else if(keys.length==0) console.log(\"Nothing around here... 📭\",)\r\n        else console.log(\"All keys successfully loaded! 🤙\\n\", keys)\r\n    })\r\n\r\nexport const clearAll = async () =>\r\n    await AsyncStorage.clear((err) => {\r\n        if (err) throw new Error(err)\r\n        else console.log(`All clean and \"perfectly balanced, as all things should be.\" 😈💎👌💨`)\r\n    })"]},"metadata":{},"sourceType":"module"}