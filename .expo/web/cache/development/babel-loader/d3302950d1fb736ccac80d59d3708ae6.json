{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matheus\\\\Desktop\\\\react_native\\\\jds\\\\For\\xE7a de Vendas 2.0 (React Native)\\\\node_modules\\\\react-native-carousel-control\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./styles\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nvar Carousel = function (_Component) {\n  _inherits(Carousel, _Component);\n\n  var _super = _createSuper(Carousel);\n\n  function Carousel(props) {\n    var _this;\n\n    _classCallCheck(this, Carousel);\n\n    _this = _super.call(this, props);\n    _this.displayName = \"Carousel\";\n    _this.state = {\n      gap: undefined,\n      currentPage: props.currentPage\n    };\n    _this._scrollTimeout = null;\n    _this._resetScrollPosition = _this._resetScrollPosition.bind(_assertThisInitialized(_this));\n    _this._handleScrollEnd = _this._handleScrollEnd.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Carousel, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this._calculateGap(this.props);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._resetScrollPosition(false);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        currentPage: nextProps.currentPage\n      });\n\n      this._calculateGap(nextProps);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.currentPage !== this.props.currentPage) {\n        this._resetScrollPosition();\n\n        this._onPageChange(this.props.currentPage);\n      } else if (prevState.currentPage !== this.state.currentPage) {\n        this._resetScrollPosition();\n\n        this._onPageChange(this.state.currentPage);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._scrollTimeout) {\n        clearTimeout(this._scrollTimeout);\n      }\n    }\n  }, {\n    key: \"_getPageOffset\",\n    value: function _getPageOffset() {\n      var pageWidth = this.props.pageWidth;\n      var gap = this.state.gap;\n      return pageWidth + gap;\n    }\n  }, {\n    key: \"_getPageScrollX\",\n    value: function _getPageScrollX(pageIndex) {\n      return pageIndex * this._getPageOffset();\n    }\n  }, {\n    key: \"_getPagesCount\",\n    value: function _getPagesCount() {\n      return React.Children.count(this.props.children);\n    }\n  }, {\n    key: \"_resetScrollPosition\",\n    value: function _resetScrollPosition() {\n      var _this2 = this;\n\n      var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (this._scrollTimeout) {\n        clearTimeout(this._scrollTimeout);\n      }\n\n      this._scrollTimeout = setTimeout(function () {\n        _this2.scrollView.scrollTo({\n          x: _this2._getPageScrollX(_this2.state.currentPage),\n          y: 0,\n          animated: animated\n        });\n\n        _this2._scrollTimeout = null;\n      }, this.props.transitionDelay);\n    }\n  }, {\n    key: \"_calculateGap\",\n    value: function _calculateGap(props) {\n      var sneak = props.sneak,\n          pageWidth = props.pageWidth;\n\n      if (pageWidth > width) {\n        throw new Error(\"invalid pageWidth\");\n      }\n\n      var gap = (width - 2 * sneak - pageWidth) / 2;\n      this.setState({\n        gap: gap\n      });\n    }\n  }, {\n    key: \"_handleScrollEnd\",\n    value: function _handleScrollEnd(e) {\n      var swipeThreshold = this.props.swipeThreshold;\n      var currentPage = this.state.currentPage;\n\n      var currentPageScrollX = this._getPageScrollX(currentPage);\n\n      var currentScrollX = e.nativeEvent.contentOffset.x;\n\n      var swiped = (currentScrollX - currentPageScrollX) / this._getPageOffset();\n\n      var pagesSwiped = Math.floor(Math.abs(swiped) + (1 - swipeThreshold)) * Math.sign(swiped);\n      var newPage = Math.max(Math.min(currentPage + pagesSwiped, this._getPagesCount() - 1), 0);\n\n      if (newPage !== currentPage) {\n        this.setState({\n          currentPage: newPage\n        });\n      } else {\n        this._resetScrollPosition();\n      }\n    }\n  }, {\n    key: \"_onPageChange\",\n    value: function _onPageChange(position) {\n      if (this.props.onPageChange) {\n        var currentElement = this.props.children[position];\n        this.props.onPageChange(position, currentElement);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          sneak = _this$props.sneak,\n          pageWidth = _this$props.pageWidth;\n      var gap = this.state.gap;\n      var computedStyles = StyleSheet.create({\n        scrollView: {\n          paddingLeft: sneak + gap / 2,\n          paddingRight: sneak + gap / 2\n        },\n        page: {\n          width: pageWidth,\n          justifyContent: \"center\",\n          marginLeft: gap / 2,\n          marginRight: gap / 2\n        }\n      });\n      var body = null;\n\n      if (!this.props.children) {\n        body = React.createElement(TouchableWithoutFeedback, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: [styles.page, computedStyles.page, this.props.pageStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: styles.noItemsText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }\n        }, this.props.noItemsText)));\n      } else {\n        var children = Array.isArray(this.props.children) ? this.props.children : [this.props.children];\n        body = children.map(function (c, index) {\n          return React.createElement(TouchableWithoutFeedback, {\n            key: index,\n            onPress: function onPress() {\n              return _this3.setState({\n                currentPage: index\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 21\n            }\n          }, React.createElement(View, {\n            style: [styles.page, computedStyles.page, _this3.props.pageStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 25\n            }\n          }, c));\n        });\n      }\n\n      return React.createElement(View, {\n        style: [styles.container, this.props.containerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        automaticallyAdjustContentInsets: false,\n        bounces: true,\n        contentContainerStyle: [computedStyles.scrollView],\n        style: {\n          flexDirection: I18nManager && I18nManager.isRTL ? 'row-reverse' : 'row'\n        },\n        decelerationRate: 0.9,\n        horizontal: true,\n        onScrollEndDrag: this._handleScrollEnd,\n        ref: function ref(c) {\n          return _this3.scrollView = c;\n        },\n        showsHorizontalScrollIndicator: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }\n      }, body));\n    }\n  }]);\n\n  return Carousel;\n}(Component);\n\nCarousel.propTypes = {\n  pageStyle: PropTypes.object,\n  pageWidth: PropTypes.number,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  initialPage: PropTypes.number,\n  containerStyle: PropTypes.object,\n  noItemsText: PropTypes.string,\n  onPageChange: PropTypes.func,\n  sneak: PropTypes.number,\n  transitionDelay: PropTypes.number,\n  currentPage: PropTypes.number,\n  swipeThreshold: PropTypes.number\n};\nCarousel.defaultProps = {\n  initialPage: 0,\n  pageStyle: null,\n  containerStyle: null,\n  pageWidth: width - 80,\n  sneak: 20,\n  noItemsText: \"Sorry, there are currently \\n no items available\",\n  transitionDelay: 0,\n  currentPage: 0,\n  swipeThreshold: 0.5\n};\nexport { Carousel as default };","map":{"version":3,"sources":["C:/Users/Matheus/Desktop/react_native/jds/Força de Vendas 2.0 (React Native)/node_modules/react-native-carousel-control/index.js"],"names":["React","Component","PropTypes","styles","Dimensions","get","width","Carousel","props","displayName","state","gap","undefined","currentPage","_scrollTimeout","_resetScrollPosition","bind","_handleScrollEnd","_calculateGap","nextProps","setState","prevProps","prevState","_onPageChange","clearTimeout","pageWidth","pageIndex","_getPageOffset","Children","count","children","animated","setTimeout","scrollView","scrollTo","x","_getPageScrollX","y","transitionDelay","sneak","Error","e","swipeThreshold","currentPageScrollX","currentScrollX","nativeEvent","contentOffset","swiped","pagesSwiped","Math","floor","abs","sign","newPage","max","min","_getPagesCount","position","onPageChange","currentElement","computedStyles","StyleSheet","create","paddingLeft","paddingRight","page","justifyContent","marginLeft","marginRight","body","pageStyle","noItemsText","Array","isArray","map","c","index","container","containerStyle","flexDirection","I18nManager","isRTL","propTypes","object","number","oneOfType","arrayOf","node","isRequired","initialPage","string","func","defaultProps"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;;;AAWA,OAAOC,MAAP;;sBAEkBC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAVC,K,mBAAAA,K;;IAEaC,Q;;;;;AA8BjB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AADe,UA5BnBC,WA4BmB,GA5BL,UA4BK;AAGf,UAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAEC,SADI;AAETC,MAAAA,WAAW,EAAEL,KAAK,CAACK;AAFV,KAAb;AAKA,UAAKC,cAAL,GAAsB,IAAtB;AAEA,UAAKC,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BC,IAA1B,+BAA5B;AACA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,+BAAxB;AAXe;AAYlB;;;;yCAEoB;AACjB,WAAKE,aAAL,CAAmB,KAAKV,KAAxB;AACH;;;wCAEmB;AAChB,WAAKO,oBAAL,CAA0B,KAA1B;AACH;;;8CAEyBI,S,EAAW;AAEjC,WAAKC,QAAL,CAAc;AACVP,QAAAA,WAAW,EAAEM,SAAS,CAACN;AADb,OAAd;;AAIA,WAAKK,aAAL,CAAmBC,SAAnB;AACH;;;uCAEkBE,S,EAAWC,S,EAAW;AACrC,UAAID,SAAS,CAACR,WAAV,KAA0B,KAAKL,KAAL,CAAWK,WAAzC,EAAsD;AAClD,aAAKE,oBAAL;;AACA,aAAKQ,aAAL,CAAmB,KAAKf,KAAL,CAAWK,WAA9B;AACH,OAHD,MAGO,IAAIS,SAAS,CAACT,WAAV,KAA0B,KAAKH,KAAL,CAAWG,WAAzC,EAAsD;AACzD,aAAKE,oBAAL;;AACA,aAAKQ,aAAL,CAAmB,KAAKb,KAAL,CAAWG,WAA9B;AACH;AACJ;;;2CAEsB;AACnB,UAAI,KAAKC,cAAT,EAAyB;AACrBU,QAAAA,YAAY,CAAC,KAAKV,cAAN,CAAZ;AACH;AACJ;;;qCAEgB;AAAA,UAETW,SAFS,GAGT,KAAKjB,KAHI,CAETiB,SAFS;AAAA,UAMTd,GANS,GAOT,KAAKD,KAPI,CAMTC,GANS;AASb,aAAOc,SAAS,GAAGd,GAAnB;AACH;;;oCAEee,S,EAAW;AACvB,aAAOA,SAAS,GAAG,KAAKC,cAAL,EAAnB;AACH;;;qCAEgB;AACb,aAAO3B,KAAK,CAAC4B,QAAN,CAAeC,KAAf,CAAqB,KAAKrB,KAAL,CAAWsB,QAAhC,CAAP;AACH;;;2CAEqC;AAAA;;AAAA,UAAjBC,QAAiB,uEAAN,IAAM;;AASlC,UAAI,KAAKjB,cAAT,EAAyB;AACrBU,QAAAA,YAAY,CAAC,KAAKV,cAAN,CAAZ;AACH;;AACD,WAAKA,cAAL,GAAsBkB,UAAU,CAAC,YAAM;AACnC,QAAA,MAAI,CAACC,UAAL,CAAgBC,QAAhB,CAAyB;AACrBC,UAAAA,CAAC,EAAE,MAAI,CAACC,eAAL,CAAqB,MAAI,CAAC1B,KAAL,CAAWG,WAAhC,CADkB;AAErBwB,UAAAA,CAAC,EAAE,CAFkB;AAGrBN,UAAAA,QAAQ,EAARA;AAHqB,SAAzB;;AAKA,QAAA,MAAI,CAACjB,cAAL,GAAsB,IAAtB;AACH,OAP+B,EAO7B,KAAKN,KAAL,CAAW8B,eAPkB,CAAhC;AAQH;;;kCAEa9B,K,EAAO;AAAA,UACT+B,KADS,GACY/B,KADZ,CACT+B,KADS;AAAA,UACFd,SADE,GACYjB,KADZ,CACFiB,SADE;;AAEjB,UAAIA,SAAS,GAAGnB,KAAhB,EAAuB;AACnB,cAAM,IAAIkC,KAAJ,CAAU,mBAAV,CAAN;AACH;;AAcD,UAAM7B,GAAG,GAAG,CAACL,KAAK,GAAI,IAAIiC,KAAb,GAAsBd,SAAvB,IAAoC,CAAhD;AACA,WAAKL,QAAL,CAAc;AAACT,QAAAA,GAAG,EAAEA;AAAN,OAAd;AACH;;;qCAEgB8B,C,EAAG;AAAA,UACRC,cADQ,GACW,KAAKlC,KADhB,CACRkC,cADQ;AAAA,UAER7B,WAFQ,GAEQ,KAAKH,KAFb,CAERG,WAFQ;;AAIhB,UAAM8B,kBAAkB,GAAG,KAAKP,eAAL,CAAqBvB,WAArB,CAA3B;;AACA,UAAM+B,cAAc,GAAGH,CAAC,CAACI,WAAF,CAAcC,aAAd,CAA4BX,CAAnD;;AAEA,UAAMY,MAAM,GAAG,CAACH,cAAc,GAAGD,kBAAlB,IAAwC,KAAKhB,cAAL,EAAvD;;AAEA,UAAMqB,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASJ,MAAT,KAAoB,IAAIL,cAAxB,CAAX,IAAsDO,IAAI,CAACG,IAAL,CAAUL,MAAV,CAA1E;AACA,UAAMM,OAAO,GAAGJ,IAAI,CAACK,GAAL,CAASL,IAAI,CAACM,GAAL,CAAS1C,WAAW,GAAGmC,WAAvB,EAAoC,KAAKQ,cAAL,KAAwB,CAA5D,CAAT,EAAyE,CAAzE,CAAhB;;AAEA,UAAIH,OAAO,KAAKxC,WAAhB,EAA6B;AACzB,aAAKO,QAAL,CAAc;AAACP,UAAAA,WAAW,EAAEwC;AAAd,SAAd;AACH,OAFD,MAEO;AACH,aAAKtC,oBAAL;AACH;AAEJ;;;kCAEa0C,Q,EAAU;AACpB,UAAI,KAAKjD,KAAL,CAAWkD,YAAf,EAA6B;AACzB,YAAMC,cAAc,GAAG,KAAKnD,KAAL,CAAWsB,QAAX,CAAoB2B,QAApB,CAAvB;AACA,aAAKjD,KAAL,CAAWkD,YAAX,CAAwBD,QAAxB,EAAkCE,cAAlC;AACH;AACJ;;;6BAEQ;AAAA;;AAAA,wBACwB,KAAKnD,KAD7B;AAAA,UACG+B,KADH,eACGA,KADH;AAAA,UACUd,SADV,eACUA,SADV;AAAA,UAEGd,GAFH,GAEW,KAAKD,KAFhB,CAEGC,GAFH;AAGL,UAAMiD,cAAc,GAAGC,UAAU,CAACC,MAAX,CAAkB;AACrC7B,QAAAA,UAAU,EAAE;AACR8B,UAAAA,WAAW,EAAExB,KAAK,GAAG5B,GAAG,GAAG,CADnB;AAERqD,UAAAA,YAAY,EAAEzB,KAAK,GAAG5B,GAAG,GAAG;AAFpB,SADyB;AAKrCsD,QAAAA,IAAI,EAAE;AACF3D,UAAAA,KAAK,EAAEmB,SADL;AAEFyC,UAAAA,cAAc,EAAE,QAFd;AAGFC,UAAAA,UAAU,EAAExD,GAAG,GAAG,CAHhB;AAIFyD,UAAAA,WAAW,EAAEzD,GAAG,GAAG;AAJjB;AAL+B,OAAlB,CAAvB;AAcA,UAAI0D,IAAI,GAAG,IAAX;;AACA,UAAI,CAAC,KAAK7D,KAAL,CAAWsB,QAAhB,EAA0B;AACtBuC,QAAAA,IAAI,GACA,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAG,CAAElE,MAAM,CAAC8D,IAAT,EAAeL,cAAc,CAACK,IAA9B,EAAoC,KAAKzD,KAAL,CAAW8D,SAA/C,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAGnE,MAAM,CAACoE,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACM,KAAK/D,KAAL,CAAW+D,WADjB,CADJ,CADJ,CADJ;AASH,OAVD,MAWK;AACD,YAAMzC,QAAQ,GAAG0C,KAAK,CAACC,OAAN,CAAc,KAAKjE,KAAL,CAAWsB,QAAzB,IAAqC,KAAKtB,KAAL,CAAWsB,QAAhD,GAA2D,CAAC,KAAKtB,KAAL,CAAWsB,QAAZ,CAA5E;AACAuC,QAAAA,IAAI,GAAGvC,QAAQ,CAAC4C,GAAT,CAAa,UAACC,CAAD,EAAIC,KAAJ,EAAc;AAC9B,iBACI,oBAAC,wBAAD;AACI,YAAA,GAAG,EAAGA,KADV;AAEI,YAAA,OAAO,EAAG;AAAA,qBAAM,MAAI,CAACxD,QAAL,CAAc;AAACP,gBAAAA,WAAW,EAAE+D;AAAd,eAAd,CAAN;AAAA,aAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAII,oBAAC,IAAD;AACI,YAAA,KAAK,EAAG,CAAEzE,MAAM,CAAC8D,IAAT,EAAeL,cAAc,CAACK,IAA9B,EAAoC,MAAI,CAACzD,KAAL,CAAW8D,SAA/C,CADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAGMK,CAHN,CAJJ,CADJ;AAYH,SAbM,CAAP;AAcH;;AAED,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAExE,MAAM,CAAC0E,SAAT,EAAoB,KAAKrE,KAAL,CAAWsE,cAA/B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AACI,QAAA,gCAAgC,EAAG,KADvC;AAEI,QAAA,OAAO,MAFX;AAGI,QAAA,qBAAqB,EAAG,CAAElB,cAAc,CAAC3B,UAAjB,CAH5B;AAII,QAAA,KAAK,EAAE;AAAE8C,UAAAA,aAAa,EAAGC,WAAW,IAAIA,WAAW,CAACC,KAA5B,GAAqC,aAArC,GAAqD;AAAtE,SAJX;AAKI,QAAA,gBAAgB,EAAG,GALvB;AAMI,QAAA,UAAU,MANd;AAOI,QAAA,eAAe,EAAG,KAAKhE,gBAP3B;AAQI,QAAA,GAAG,EAAG,aAAA0D,CAAC;AAAA,iBAAI,MAAI,CAAC1C,UAAL,GAAkB0C,CAAtB;AAAA,SARX;AASI,QAAA,8BAA8B,EAAG,KATrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWMN,IAXN,CADJ,CADJ;AAiBH;;;;EAxOiCpE,S;;AAAjBM,Q,CAIV2E,S,GAAY;AACfZ,EAAAA,SAAS,EAAEpE,SAAS,CAACiF,MADN;AAEf1D,EAAAA,SAAS,EAAEvB,SAAS,CAACkF,MAFN;AAGftD,EAAAA,QAAQ,EAAE5B,SAAS,CAACmF,SAAV,CAAoB,CAAEnF,SAAS,CAACoF,OAAV,CAAkBpF,SAAS,CAACqF,IAA5B,CAAF,EAAqCrF,SAAS,CAACqF,IAA/C,CAApB,EAA2EC,UAHtE;AAIfC,EAAAA,WAAW,EAAEvF,SAAS,CAACkF,MAJR;AAKfN,EAAAA,cAAc,EAAE5E,SAAS,CAACiF,MALX;AAMfZ,EAAAA,WAAW,EAAErE,SAAS,CAACwF,MANR;AAOfhC,EAAAA,YAAY,EAAExD,SAAS,CAACyF,IAPT;AAQfpD,EAAAA,KAAK,EAAErC,SAAS,CAACkF,MARF;AASf9C,EAAAA,eAAe,EAAEpC,SAAS,CAACkF,MATZ;AAUfvE,EAAAA,WAAW,EAAEX,SAAS,CAACkF,MAVR;AAWf1C,EAAAA,cAAc,EAAExC,SAAS,CAACkF;AAXX,C;AAJF7E,Q,CAkBVqF,Y,GAAe;AAClBH,EAAAA,WAAW,EAAE,CADK;AAElBnB,EAAAA,SAAS,EAAE,IAFO;AAGlBQ,EAAAA,cAAc,EAAE,IAHE;AAIlBrD,EAAAA,SAAS,EAAEnB,KAAK,GAAG,EAJD;AAKlBiC,EAAAA,KAAK,EAAE,EALW;AAMlBgC,EAAAA,WAAW,EAAE,kDANK;AAOlBjC,EAAAA,eAAe,EAAE,CAPC;AAQlBzB,EAAAA,WAAW,EAAE,CARK;AASlB6B,EAAAA,cAAc,EAAE;AATE,C;SAlBLnC,Q","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n    Dimensions,\n    I18nManager,\n    ScrollView,\n    StyleSheet,\n    Text,\n    TouchableWithoutFeedback,\n    View\n} from \"react-native\";\n\nimport styles from \"./styles\";\n\nconst { width } = Dimensions.get(\"window\");\n\nexport default class Carousel extends Component {\n\n    displayName = \"Carousel\";\n\n    static propTypes = {\n        pageStyle: PropTypes.object,\n        pageWidth: PropTypes.number,\n        children: PropTypes.oneOfType([ PropTypes.arrayOf(PropTypes.node), PropTypes.node ]).isRequired,\n        initialPage: PropTypes.number,\n        containerStyle: PropTypes.object,\n        noItemsText: PropTypes.string,\n        onPageChange: PropTypes.func,\n        sneak: PropTypes.number,\n        transitionDelay: PropTypes.number,\n        currentPage: PropTypes.number,\n        swipeThreshold: PropTypes.number\n    };\n\n    static defaultProps = {\n        initialPage: 0,\n        pageStyle: null,\n        containerStyle: null,\n        pageWidth: width - 80,\n        sneak: 20,\n        noItemsText: \"Sorry, there are currently \\n no items available\",\n        transitionDelay: 0,\n        currentPage: 0,\n        swipeThreshold: 0.5\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            gap: undefined,\n            currentPage: props.currentPage,\n        };\n\n        this._scrollTimeout = null;\n\n        this._resetScrollPosition = this._resetScrollPosition.bind(this);\n        this._handleScrollEnd = this._handleScrollEnd.bind(this);\n    }\n\n    componentWillMount() {\n        this._calculateGap(this.props);\n    }\n\n    componentDidMount() {\n        this._resetScrollPosition(false);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        \n        this.setState({\n            currentPage: nextProps.currentPage\n        });\n        \n        this._calculateGap(nextProps);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.currentPage !== this.props.currentPage) {\n            this._resetScrollPosition();\n            this._onPageChange(this.props.currentPage);\n        } else if (prevState.currentPage !== this.state.currentPage) {\n            this._resetScrollPosition();\n            this._onPageChange(this.state.currentPage);\n        }\n    }\n\n    componentWillUnmount() {\n        if (this._scrollTimeout) {\n            clearTimeout(this._scrollTimeout);\n        }\n    }\n\n    _getPageOffset() {\n        const {\n            pageWidth,\n        } = this.props;\n\n        const {\n            gap,\n        } = this.state;\n\n        return pageWidth + gap;\n    }\n\n    _getPageScrollX(pageIndex) {\n        return pageIndex * this._getPageOffset();\n    }\n\n    _getPagesCount() {\n        return React.Children.count(this.props.children);\n    }\n\n    _resetScrollPosition(animated = true) {\n        // in android, you can't scroll directly in componentDidMount\n        // (http://stackoverflow.com/questions/33208477/react-native-android-scrollview-scrollto-not-working)\n        // however this doesn't work in android for some reason:\n        // InteractionManager.runAfterInteractions(() => {\n        //     this.scrollView.scrollTo({ y: 0, x: pagePosition}, true);\n        //     console.log('scrollView.scrollTo x:', pagePosition);\n        // });\n        // So I was left with an arbitrary timeout.\n        if (this._scrollTimeout) {\n            clearTimeout(this._scrollTimeout);\n        }\n        this._scrollTimeout = setTimeout(() => {\n            this.scrollView.scrollTo({\n                x: this._getPageScrollX(this.state.currentPage),\n                y: 0,\n                animated,\n            });\n            this._scrollTimeout = null;\n        }, this.props.transitionDelay);\n    }\n\n    _calculateGap(props) {\n        const { sneak, pageWidth } = props;\n        if (pageWidth > width) {\n            throw new Error(\"invalid pageWidth\");\n        }\n        /*\n         ------------\n        |            |\n        |-   ----   -|\n        | | |    | | |\n        | | |    | | |\n        | | |    | | |\n        |-   ----   -|\n        |^-- sneak   |\n        |         ^--- gap\n         ------------\n\n        */\n        const gap = (width - (2 * sneak) - pageWidth) / 2;\n        this.setState({gap: gap});\n    }\n\n    _handleScrollEnd(e) {\n        const { swipeThreshold } = this.props;\n        const { currentPage } = this.state;\n\n        const currentPageScrollX = this._getPageScrollX(currentPage);\n        const currentScrollX = e.nativeEvent.contentOffset.x;\n\n        const swiped = (currentScrollX - currentPageScrollX) / this._getPageOffset();\n\n        const pagesSwiped = Math.floor(Math.abs(swiped) + (1 - swipeThreshold)) * Math.sign(swiped);\n        const newPage = Math.max(Math.min(currentPage + pagesSwiped, this._getPagesCount() - 1), 0)\n\n        if (newPage !== currentPage) {\n            this.setState({currentPage: newPage});\n        } else {\n            this._resetScrollPosition();\n        }\n\n    };\n\n    _onPageChange(position) {\n        if (this.props.onPageChange) {\n            const currentElement = this.props.children[position];\n            this.props.onPageChange(position, currentElement);\n        }\n    }\n\n    render() {\n        const { sneak, pageWidth } = this.props;\n        const { gap } = this.state;\n        const computedStyles = StyleSheet.create({\n            scrollView: {\n                paddingLeft: sneak + gap / 2,\n                paddingRight: sneak + gap / 2\n            },\n            page: {\n                width: pageWidth,\n                justifyContent: \"center\",\n                marginLeft: gap / 2,\n                marginRight: gap / 2\n            }\n        });\n\n        // if no children render a no items dummy page without callbacks\n        let body = null;\n        if (!this.props.children) {\n            body = (\n                <TouchableWithoutFeedback>\n                    <View style={ [ styles.page, computedStyles.page, this.props.pageStyle ] }>\n                        <Text style={ styles.noItemsText }>\n                            { this.props.noItemsText }\n                        </Text>\n                    </View>\n                </TouchableWithoutFeedback>\n            );\n        }\n        else {\n            const children = Array.isArray(this.props.children) ? this.props.children : [this.props.children]\n            body = children.map((c, index) => {\n                return (\n                    <TouchableWithoutFeedback\n                        key={ index }\n                        onPress={ () => this.setState({currentPage: index}) }\n                    >\n                        <View\n                            style={ [ styles.page, computedStyles.page, this.props.pageStyle ] }\n                        >\n                            { c }\n                        </View>\n                    </TouchableWithoutFeedback>\n                );\n            });\n        }\n\n        return (\n            <View style={[ styles.container, this.props.containerStyle ]}>\n                <ScrollView\n                    automaticallyAdjustContentInsets={ false }\n                    bounces\n                    contentContainerStyle={ [ computedStyles.scrollView ] }\n                    style={{ flexDirection: (I18nManager && I18nManager.isRTL) ? 'row-reverse' : 'row' }}\n                    decelerationRate={ 0.9 }\n                    horizontal\n                    onScrollEndDrag={ this._handleScrollEnd }\n                    ref={ c => this.scrollView = c }\n                    showsHorizontalScrollIndicator={ false }\n                >\n                    { body }\n                </ScrollView>\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}